<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>selected = noone;
hidden = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// mouse presses
var press = noone;
var Y = room_height - 128;

if(!hidden){
    if(mouse_check_button_pressed(mb_left)){
        for(var i = 0; i &lt; ds_grid_width(ctrl.store) div 2;i++){
            for(var j = 0; j &lt; 2;j++){
                //draw_sprite(spr_stations,2*i + j, i * 64,Y + j*64);
                if(mouse_x &gt; i * 64 &amp;&amp; mouse_x &lt; (1+i) * 64){
                    if(mouse_y &gt; Y + j * 64 &amp;&amp; mouse_y &lt; Y +(1+j) * 64){
                        press = 2*i + j;
                    }
                }
            }
        }
    }
    
    if(press != noone &amp;&amp; press &lt; ds_grid_width(ctrl.store)){
        var I;
        I = instance_create(0,0,ctrl.store[#press,0]);
        I.name = ctrl.store[#press,1]
        I.desc = ctrl.store[#press,2]
        I.price = ctrl.store[#press,3]
        I.width = ctrl.store[#press,4]
        I.height = ctrl.store[#press,5]
    }
    
    if(mouse_check_button_pressed(mb_right)){
        for(var i = 0; i &lt; ds_grid_width(ctrl.store) div 2;i++){
            for(var j = 0; j &lt; 2;j++){
                //draw_sprite(spr_stations,2*i + j, i * 64,Y + j*64);
                if(mouse_x &gt; i * 64 &amp;&amp; mouse_x &lt; (1+i) * 64){
                    if(mouse_y &gt; Y + j * 64 &amp;&amp; mouse_y &lt; Y +(1+j) * 64){
                        selected = 2*i + j;
                    }
                }
            }
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var cost, capacity, orderlies, happyMod, moneyMod,xx,yy;
xx = room_width - 256 + 8;
yy = 16;
Y = room_height - 128

if(!hidden){
    for(var i = 0; i &lt; ds_grid_width(ctrl.store) div 2;i++){
        for(var j = 0; j &lt; 2;j++){
            draw_sprite(spr_stations,2*i + j, i * 64,Y + j*64);
            draw_text(i * 64,Y + j*64,ctrl.store[#(2*i + j),1]);
        }
    }
    
    draw_rectangle(room_width - 256,room_height - 0,room_width,room_height - 128,true);
    
    
    if(selected != noone &amp;&amp; selected &lt; ds_grid_width(ctrl.store)){
        /*insert getting stuff heres*/
        
        cost = ctrl.store[#selected,4];
        capacity = 0;
        orderlies = 0;
        happyMod = 0;
        moneyMod = 0;
        
        draw_text(xx,Y +0*yy, "cost: " + string(cost));
        draw_text(xx,Y +1*yy,"capacity: " + string(capacity));
        draw_text(xx,Y +2*yy,"orderlies: " + string(orderlies));
        draw_text(xx + 32,Y +3*yy, string(happyMod));
        draw_text(xx + 32,Y +4*yy, string(moneyMod));
    }
}

draw_set_color(c_white);
draw_rectangle(room_width - 32 - string_width(string(ctrl.funds)),0,room_width,32,true);
draw_set_color(c_black);
draw_sprite(spr_icons,1,room_width - 32 - string_width(string(ctrl.funds)),0);
draw_text(room_width - string_width(string(ctrl.funds)),16,ctrl.funds);

draw_sprite(spr_icons,2,0,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
