<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>selected = 0;
mouselastx = mouse_x;
mouselasty = mouse_y;

global.enemdiff = 1;
global.hpdiff = 5;
global.timediff = 1;
global.bhpdiff = 5;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///pickselected

if(abs(mouselastx - mouse_x)&gt;2 || abs(mouselasty - mouse_y)&gt;2){
    if(mouse_x &lt; x + 256){
        if(mouse_y &gt; y){
            if(mouse_y &lt; y + 6*32){
                selected = (mouse_y - y) div 32;
                mouselastx = mouse_x;
                mouselasty = mouse_y;
            }
        }
    }
}

selected += keyboard_check_pressed(ord('S')) - keyboard_check_pressed(ord('W'));
if(selected = -1){
    selected = 6;
}
selected = selected % 6;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Confirm selection

if(mouse_check_button_pressed(mb_left) || 
mouse_check_button_pressed(mb_right)){
    switch(selected){
        case 0:{
            global.timediff += 0.1 * 
            (mouse_check_button_pressed(mb_left) - mouse_check_button_pressed(mb_right))
            global.timediff = clamp(global.timediff,0.2,3);
            break;
        }
        case 1:{
            global.enemdiff += 0.2 * 
            (mouse_check_button_pressed(mb_left) - mouse_check_button_pressed(mb_right))
            global.enemdiff = clamp(global.enemdiff,0.2,2);
            break;
        }
        case 2:{
            global.hpdiff += 
            (mouse_check_button_pressed(mb_left) - mouse_check_button_pressed(mb_right))
            global.hpdiff = clamp(global.hpdiff,1,15);
            break;
        }
        case 3:{
            global.bhpdiff += 
            (mouse_check_button_pressed(mb_left) - mouse_check_button_pressed(mb_right))
            global.bhpdiff = clamp(global.bhpdiff,0,15);
            break;
        }
        case 4:{
            room_goto_next();
            audio_stop_all();
            break;
        }
        case 5:{
            instance_create(x,y,o_menu);
            instance_destroy();
            break;
        }
    }
}

if(keyboard_check_pressed(ord('A')) || 
keyboard_check_pressed(ord('D') || keyboard_check_pressed(vk_space)) ){
    switch(selected){
        case 0:{
            global.timediff += 0.1 * 
            (keyboard_check_pressed(ord('D'))  - keyboard_check_pressed(ord('A')) )
            global.timediff = clamp(global.timediff,0.2,3);
            break;
        }
        case 1:{
            global.enemdiff += 0.2 * 
            (keyboard_check_pressed(ord('D'))  - keyboard_check_pressed(ord('A')))
            global.enemdiff = clamp(global.enemdiff,0.2,2);
            break;
        }
        case 2:{
            global.hpdiff += 
            (keyboard_check_pressed(ord('D'))  - keyboard_check_pressed(ord('A')))
            global.hpdiff = clamp(global.hpdiff,1,15);
            break;
        }
        case 3:{
            global.bhpdiff += 
            (keyboard_check_pressed(ord('D'))  - keyboard_check_pressed(ord('A')))
            global.bhpdiff = clamp(global.bhpdiff,0,15);
            break;
        }
        case 4:{
            room_goto_next();
            audio_stop_all();
            break;
        }
        case 5:{
            instance_create(x,y,o_menu);
            instance_destroy();
            break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var options;
options[0] = "Game Speed: " + string(round(global.timediff * 10000)/100) + "%";
options[1] = "Your Cooldown: " + string(round(global.enemdiff * 10000)/100) + "%" ;
options[2] = "Your Health: " + string(global.hpdiff);
options[3] = "Extra Health: " + string(global.bhpdiff);
options[4] = "Play!";
options[5] = "Back";

draw_set_font(fnt_menu);
for(var i = 0; i &lt; 6; i++){
    if(selected == i){
        draw_set_color(c_red);
        draw_text(x,y + 32*i,"&lt;&gt;" + options[i] + "&lt;&gt;");
        draw_set_color(c_yellow);
        draw_text(x+2,y + 32*i,"&lt;&gt;" + options[i] + "&lt;&gt;");
        draw_set_color(c_green);
        draw_text(x+4,y + 32*i,"&lt;&gt;" + options[i] + "&lt;&gt;");
    }
    else{
        draw_set_color(c_white);
        draw_text(x,y + 32*i,options[i]);
    }
}


draw_set_color(c_white);
draw_text(x,y + 32*8,"Difficulty Score Bonus: " +string((round(10000*scr_bonus())/100) - 100) + "%");
draw_text(x,y + 32*10,"W/A/S/D to move");

draw_set_font(fnt_game);

draw_text(0,0,abs(mouse_x - mouselastx));

draw_text(0,32,abs(mouse_y - mouselasty));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
