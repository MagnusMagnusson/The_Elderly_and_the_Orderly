<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = 0;
selected = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//0 = old
//1 = applicants
switch(state){
    case 0:{
        draw_sprite(s_applicant_ui,0,display_get_width() div 2, display_get_height() div 2)
        if(mouse_check_button_pressed(mb_left)){
            selected = noone;
            for(var i = 0; i &lt; instance_number(O_Resident);i++){
                var X,Y;
                X = display_get_width() div 2 + 60*(i % 5);
                Y = 16 + display_get_height() div 2 + 115*(i div 5)- 256; 
                if(inside_range(display_mouse_get_x(),display_mouse_get_y(),X,Y,X+62,Y + 64 + 20 + 31)){
                    selected = i;
                }
            }
        }
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//0 = old
//1 = applicants
draw_set_font(fnt_screen)
switch(state){
    case 0:{
        draw_sprite(s_applicant_ui,0,display_get_width() div 2, display_get_height() div 2)
        for(var i = 0; i &lt; instance_number(O_Resident);i++){
            var I = instance_find(O_Resident,i);
            
            var X,Y;
            X = display_get_width() div 2 + 62*(i % 5);
            Y = 16 + display_get_height() div 2 + 115*(i div 5)- 256; 
            draw_sprite_ext(I.legs,0,X,Y,2,2,0,c_white,1);
            draw_sprite_ext(I.body,0,X,Y,2,2,0,c_white,1);
            draw_sprite_ext(I.head,0,X,Y,2,2,0,c_white,1);
            draw_sprite_ext(I.hair,0,X,Y,2,2,0,c_white,1);
            
            draw_sprite(spr_smile,4-round(I.happiness / 25),X+15,Y + 64+15);
            
            draw_set_color(0)
            draw_rectangle(X,Y,X+100000,Y + 64 + 20 + 31,true)
            draw_set_color(c_red);
            draw_circle(realmx(),realmy(),4,false);
            draw_set_color(c_green);
            draw_circle(mouse_x,mouse_y,4,false);
            draw_set_color(0);
        }
        
        if(selected != noone){
            var I = instance_find(O_Resident,selected);
            var _x,_y;
            _x = 445
            _y = 450
            draw_text(_x,_y,I.name)
            draw_healthbar(_x,_y + 31,_x + 128,_y + 62,I.happiness,0,c_red,c_lime,0,true,false)
        }
        draw_text(display_get_width() div 2 - 256 + 16,display_get_height() div 2 + 62+64,string(display_mouse_get_x()) + ":" + string(display_mouse_get_y()))
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
