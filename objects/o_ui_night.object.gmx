<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>selected = noone;
hidden = false;
//For switching between menu
state = noone;
//Hover over certain items (mainly store)
infoState = noone;
//Selected an item
//Is station selected
infoSelected =false;
//info showing on hover in store
infoHover = noone;
//hovering over station in store
hover = true;
//Hovering over cancel button in store
hoverCancel = false;
//Item created (in store)
I = noone;
//Back button click effect
back_effect = false;
//For staff hiring/firing
orderly_number = 0;
orderly_salary = funds_salary();
orderly_instance = instance_number(O_Orderly);
cancel_build = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// mouse presses in UI

//Switch sentence, change state calls scripts
//ui night
if(!ctrl.isDay){
    switch(state){
        case "staff":
            ui_step_staff();
            break;
        case "resident":
            ui_step_resident();
            break;
        case "startDay":
            ui_step_startDay();
            break;
        case "store":
            ui_step_store();
            break;
        default:
            ui_step_menu();
            break;
    }
}
//ui day
else{
    switch(state){
        case "resident":
            ui_step_resident();
            break;
        case "staff":
            ui_step_staff();
            break;
        default:
            ui_step_dayMenu();
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Night UI
ui_draw_menu();
ui_draw_infobox();
//Might need to change to display_get_gui_width() and display_get_gui_height()
display_set_gui_size(display_get_gui_width(), display_get_gui_height());

//night ui
if(!ctrl.isDay){
    switch(state){
        case "staff":
            ui_draw_staff();
            break;
        case "resident":
            ui_draw_resident();
            break;
        case "startDay":
            ui_draw_startDay();
            break;
        case "store":
            ui_draw_store();
            break;
        default:
            ui_draw_menu();
            break;
    }
}
//day ui
else{
    switch(state){
        case "resident":
            ui_draw_resident();
            break;
        case "staff":
            ui_draw_staff();
            break;
        default:
            ui_draw_dayMenu();
            break;
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
