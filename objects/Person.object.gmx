<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize target to location

target_x=x;
target_y=y;
tilepath=noone;
path_length=0;
index_into_path=0;

//debugging purposes

max_Astar_iterations=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create path to target if none exists
if(path_length==0 &amp;&amp; target_x!=x &amp;&amp; target_y!=y)
{
    tilepath=Astar(x div 31,y div 31,target_x div 31,target_y div 31);
    path_length=array_length_1d(tilepath);
    index_into_path=0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move target along path to final target

if(tilepath!=noone &amp;&amp; index_into_path&lt;path_length)
{
    //show_debug_message("making new tilepath");
    var target_tile=tilepath[index_into_path];
    var target_tile_x=target_tile[0]*32+16;
    var target_tile_y=target_tile[1]*32+16;
    target_x=target_tile_x;
    target_y=target_tile_y;
    if(x==target_tile_x &amp;&amp; y==target_tile_y)
    {
        show_debug_message("incrementing index");
        show_debug_message("index now:");
        show_debug_message(index_into_path);
        index_into_path+=1;
        show_debug_message("path length now:");
        show_debug_message(path_length);
        if(path_length==index_into_path)
        {
            show_debug_message("ressetting tile path");
            tilepath=noone;
            show_debug_message(path_length);
            path_length=0;
            show_debug_message(path_length);
            index_into_path=0;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// move to target if not on target and path exists

if(tilepath==noone)
    exit;
if( x-1*30.0/fps &lt;= target_x &amp;&amp; target_x &lt;= x+1.0*30/fps )
{
    x=target_x;
}

if(x &lt; target_x)
{
    x=x+1.0*30/fps;
    exit;
}


if( target_x &lt; x )
{
    x=x-1.0*30/fps;
    exit;
}


if( y-1.0*30/fps &lt;= target_y &amp;&amp; target_y &lt;= y+1.0*30/fps )
{
    y=target_y
    exit;
}

if(y &lt; target_y)
{
    y=y+1*30/fps;
    exit;
}


if( target_y &lt; y )
{
    y=y-1*30/fps;
    exit;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Select if this was clicked
global.selected_person=id;

///show profile when clicked
///show profile when clicked
if(realmx() &gt; display_get_gui_width()/6){
    ctrl.selected_id = object_index;
    ctrl.selected_stuff = true;
    ctrl.select_peeps = id;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

draw_text(x,y+40,target_x);
draw_text(x,y+31,target_y);

for(var i=0;i&lt;array_length_1d(tilepath);i++)
    draw_text(x+50,y+10*i,tilepath[i]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
