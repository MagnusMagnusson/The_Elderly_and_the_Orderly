<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.winflag){
    background_index[0]=bg_win;
}
else{
    background_index[0]=bg_lose;
}

keyboard_string = "";

mouselastx = mouse_x;
mouselasty = mouse_y
selected = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(vk_space) || 
keyboard_check_pressed(vk_enter) ||
mouse_check_button_pressed(mb_left)){
    switch(selected){
        case 0:{
            highscore_add(keyboard_string,scr_totalscore());
            save();
            with(o_ctrl){
                instance_destroy();
            }
            room_goto(rm_menu);
            break;
        }
        case 1:{
            with(o_ctrl){
                instance_destroy();
            }
            room_goto(rm_menu);
        }
    }
}


keyboard_string = string_replace(keyboard_string,'#','');
if(string_length(keyboard_string) == 25){
    keyboard_string = string_delete(keyboard_string,25,1)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///pickselected

if(abs(mouselastx - mouse_x) &gt; 2 || abs(mouselasty - mouse_y) &gt; 2){
    if(mouse_y &gt; y + 128 &amp;&amp; mouse_y &lt; y + 256){
        if(mouse_x &gt; x){
            if(mouse_x &lt; x + string_width("Confirm   ")){
                selected = (mouse_x - x) div  string_width("Confirm");
                mouselastx = mouse_x;
                mouselasty = mouse_y;
            }
        }
    }
}

selected += keyboard_check_pressed(vk_right) - keyboard_check_pressed(vk_left);
if(selected = -1){
    selected = 1;
}
selected = selected % 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_highscore);
draw_set_color(c_white);
draw_text(x,y,keyboard_string);
draw_set_color(c_silver)
draw_text(x + 1,y + 1,keyboard_string);
draw_set_color(c_white);


draw_set_font(fnt_highscore);
draw_set_color(c_white);
draw_text(x + 512,y,scr_totalscore());
draw_set_color(c_silver)
draw_text(x + 513,y + 1,scr_totalscore());
draw_set_color(c_white);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///selection draw
var option;
option[0] = "Confirm";
option[1] = "Back";
for(var i = 0; i &lt; 2; i++){
    if(selected != i){
        draw_set_color(c_white);
        draw_text(x + i*string_width("Confirm   "),y + 128,option[i]);
    }
    else{
        draw_set_color(c_white);
        draw_text(x + i*string_width("Confirm   "),y + 128,option[i]);
        draw_set_color(c_yellow);
        draw_text(1+x + i*string_width("Confirm   "),1 + y + 128,option[i]);
        draw_set_color(c_green);
        draw_text(2+x + i*string_width("Confirm   "),2 + y + 128,option[i]);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
