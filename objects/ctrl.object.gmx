<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables

isDay = !true;
dayDuration = 5 * room_speed * 60 //5 minutes per day
timeLeft = dayDuration;
funds = 2000;
day = 1;
profileActive = false; //for clicking stations

global.built_stations=ds_list_create();
for(var i=0;i &lt; instance_number(o_Station);i++)
{
    ds_list_add(global.built_stations,instance_find(o_Station,i));
}

store = store_init();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision matrix

matrix = 0;
wallMatrix = 0;

for(var i = 0; i &lt; room_width div 31; i++){
    for(var j = 0; j &lt; room_height div 31; j++){
        matrix[i,j] = noone;
    }
}

for(var i = 0; i &lt; room_width div 31; i++){
    for(var j = 0; j &lt; room_height div 31; j++){
        wallMatrix[i,j] = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///randTiles

for(var i = 0; i &lt; room_width; i+=31){
    for(var j = 0; j &lt; room_width; j+=31){
        //tile_add(bg_parquet, irandom(4)*31, 0,31, 31,i,j,255);
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Basic room
/*Basic room with 2 beds, tv station, oderly and 2 residents*/

//Residents
resident1 = instance_create(31*10, 31*20, O_Resident);
resident2 = instance_create(31*8, 31*15, O_Resident);
//The beds
bed1 = instance_create(31*3 ,31*6 ,o_bed);
bed2 = instance_create(31*2 ,31*6 ,o_bed);
bed1.being_built = false;
bed2.being_built = false;

tv = instance_create(31*6 , 31*7, o_TV);
tv.being_built = false;


//Objects added to the matrix
//Beds
matrix_reserve(bed1.x div 31, bed1.y div 31, bed1.width, bed1.height, bed1.id );
matrix_reserve(bed2.x div 31, bed2.y div 31, bed2.width, bed2.height, bed2.id );
//TV
matrix_reserve(tv.x div 31, tv.y div 31, tv.width, tv.height, tv.id);







</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timeLeft--;

if(timeLeft &lt;= 0){
    isDay = !isDay;
    timeLeft = dayDuration;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_text(16,16,instance_number(o_bed));

for(var i = 0; i &lt; room_width div 31; i += 1){
    for(var j = 0; j &lt; room_height div 31; j += 1){
        //draw_text(i*31 + 15, j*31 + 15,wallMatrix[i,j]);
                     /*   for(var k = 0; k &lt; 4; k++){
            var num,_i,_j;
            _j = (k &lt; 2);
            _i = !(k &gt; 0 &amp;&amp; k &lt; 3);
            num = power(2,k) + power(2,(k+1)%4)
            if(wallMatrix[i,j] &amp; num == num){
                draw_sprite(spr_courner,0,(i + _i)*31-2,(j + _j)*31-4);
            }
        }*/
        
        if(wallMatrix[i,j] &amp; 1 &gt; 0){
            draw_sprite(spr_wall,0,2+(1+i)*31 - 4,j*31-4);
        }
        if(wallMatrix[i,j] &amp; 2 &gt; 0){
            draw_sprite_ext(spr_wall,0,(i)*31,2+(j+1)*31 - 4,1,1,90,c_white,1);
        }
        if(wallMatrix[i,j] &amp; 4 &gt; 0){
            draw_sprite(spr_wall,0,(i)*31 -2,j*31-4);
        }
        if(wallMatrix[i,j] &amp; 8 &gt; 0){
            draw_sprite_ext(spr_wall,0,(i)*31,(j)*31 -2,1,1,90,c_white,1);
        }
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Bed
//For debugging 
instance_create(x, y, o_bed);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wallmatrix_reserve(mouse_x div 31, mouse_y div 31,2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wallmatrix_reserve(mouse_x div 31, mouse_y div 31,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wallmatrix_reserve(mouse_x div 31, mouse_y div 31,8);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wallmatrix_reserve(mouse_x div 31, mouse_y div 31,4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
